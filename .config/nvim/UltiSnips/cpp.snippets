snippet public "Write public with comment" b
public:  // ====> $1
endsnippet

snippet private "Write private with comment" b
private:  // ===> $1
endsnippet

snippet protected "Write protected with comment" b
protected:  // => $1
endsnippet

snippet dlink "Write Doxygen link"
\link $1 \endlink
endsnippet


snippet ctor "Constructor definition"
${1:`!v substitute(substitute(vim_snippets#Filename('$1','ClassName'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`}() $2;
~$1() $3;

$1($1&& other) ${4:`!v substitute(substitute(vim_snippets#Filename('= default','AttributeMove'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`};
$1& operator=($1&& other) $4;
$1(const $1& other) ${5:`!v substitute(substitute(vim_snippets#Filename('= default','AttributeCopy'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`};
$1& operator=(const $1& other) $5;
endsnippet
